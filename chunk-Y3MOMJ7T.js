import{Z as i}from"./chunk-YHHNUHBO.js";var a=class o{performanceObserver;memoryCheckInterval;constructor(){this.initPerformanceMonitoring()}initPerformanceMonitoring(){if("PerformanceObserver"in window){this.performanceObserver=new PerformanceObserver(e=>{for(let t of e.getEntries())this.logPerformanceMetric(t)});try{this.performanceObserver.observe({entryTypes:["measure","navigation","paint"]})}catch{console.warn("Performance monitoring not fully supported")}}this.startMemoryMonitoring()}logPerformanceMetric(e){if(e.entryType==="navigation"){let t=e;console.log("Navigation Performance:",{domContentLoaded:t.domContentLoadedEventEnd-t.domContentLoadedEventStart,loadComplete:t.loadEventEnd-t.loadEventStart,firstPaint:this.getFirstPaint(),firstContentfulPaint:this.getFirstContentfulPaint()})}}getFirstPaint(){let t=performance.getEntriesByType("paint").find(r=>r.name==="first-paint");return t?t.startTime:0}getFirstContentfulPaint(){let t=performance.getEntriesByType("paint").find(r=>r.name==="first-contentful-paint");return t?t.startTime:0}startMemoryMonitoring(){this.memoryCheckInterval=window.setInterval(()=>{this.checkMemoryUsage()},3e4)}checkMemoryUsage(){if("memory"in performance){let e=performance.memory,t={usedJSHeapSize:e.usedJSHeapSize,totalJSHeapSize:e.totalJSHeapSize,jsHeapSizeLimit:e.jsHeapSizeLimit,usagePercentage:e.usedJSHeapSize/e.jsHeapSizeLimit*100};t.usagePercentage>80&&console.warn("High memory usage detected:",t),s.production||console.log("Memory Usage:",t)}}measureComponentLoad(e){let t=performance.now();return()=>{let n=performance.now()-t;console.log(`${e} load time: ${n.toFixed(2)}ms`),n>100&&console.warn(`Slow component detected: ${e} took ${n.toFixed(2)}ms`)}}markFeatureUsage(e){performance.mark(`feature-${e}-start`)}measureFeatureUsage(e){let t=`feature-${e}-start`,r=`feature-${e}-duration`;try{performance.measure(r,t);let n=performance.getEntriesByName(r)[0];console.log(`Feature ${e} usage time: ${n.duration.toFixed(2)}ms`)}catch{console.warn(`Could not measure feature ${e}`)}}destroy(){this.performanceObserver&&this.performanceObserver.disconnect(),this.memoryCheckInterval&&clearInterval(this.memoryCheckInterval)}static \u0275fac=function(t){return new(t||o)};static \u0275prov=i({token:o,factory:o.\u0275fac,providedIn:"root"})},s={production:!1};export{a};
